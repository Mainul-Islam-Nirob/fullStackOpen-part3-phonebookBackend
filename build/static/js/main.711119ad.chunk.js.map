{"version":3,"sources":["Components/Person.js","Components/Persons.js","Components/InputField.js","Components/PersonForm.js","services/persons.js","Components/Notification.js","App.js","index.js"],"names":["Person","person","handleDelete","name","number","onClick","id","Persons","filter","persons","filteredPersons","map","InputField","label","type","value","onChange","PersonForm","onSubmit","newName","handleNameChange","newNumber","handleNumberChange","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","setFilter","setFilteredPersons","notification","setNotification","useEffect","personService","initialPerson","success","error","event","target","filtered","toLowerCase","includes","preventDefault","newPerson","alreadyExists","some","find","p","changedPerson","window","confirm","returnedPerson","setTimeout","concat","catch","err","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.711119ad.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n    \r\n    \r\n\r\nconst Person = ({person, handleDelete}) => (\r\n    <div>\r\n        <span>{person.name} : </span>\r\n        <span>{person.number} </span>\r\n        <button onClick={() => handleDelete(person.id)}>Delete</button>\r\n    </div>  \r\n    )\r\n\r\nexport default Person","import React from \"react\"\r\nimport Person from \"./Person\"\r\n\r\nconst Persons = ({ filter, persons, filteredPersons, handleDelete }) => (\r\n    <div>\r\n        {filter === \"\"\r\n            ? persons.map(person => \r\n            <Person \r\n                key={person.name} \r\n                person={person} \r\n                handleDelete={handleDelete}\r\n             />)\r\n            : filteredPersons.map(person => (\r\n                <Person \r\n                    key={person.name} \r\n                    person={person} \r\n                    handleDelete={handleDelete} \r\n                />\r\n            ))}\r\n    </div>\r\n)\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst InputField = ({label, type, value, onChange}) => {\r\n    return <div>\r\n        <label>{label}</label>\r\n        <input \r\n         type={type}\r\n         value={value}\r\n         onChange={onChange} \r\n         />\r\n    </div>\r\n}\r\n\r\nexport default InputField","import React from 'react'\r\nimport InputField from './InputField'\r\n\r\nconst PersonForm = ({\r\n    onSubmit,\r\n    newName,\r\n    handleNameChange,\r\n    newNumber,\r\n    handleNumberChange\r\n}) => { \r\n return(\r\n <form onSubmit={onSubmit}>\r\n         <InputField \r\n            label=\"Name:\"\r\n            type=\"text\"\r\n            value={newName}\r\n            onChange={handleNameChange}\r\n        />\r\n\r\n         <InputField\r\n            label=\"Number:\"\r\n            type=\"text\"\r\n            value={newNumber}\r\n            onChange={handleNumberChange}\r\n        />\r\n        <div>\r\n            <button type=\"submit\">Add</button>\r\n        </div>\r\n    </form>\r\n )\r\n}\r\n\r\n\r\nexport default PersonForm;","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, deletePerson }","import React from 'react'\r\n\r\nconst Notification = ({ message, className }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={className}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport \"./index.css\"\r\nimport Persons from \"./Components/Persons\"\r\nimport InputField from './Components/InputField'\r\nimport PersonForm from './Components/PersonForm'\r\nimport personService from './services/persons'\r\nimport Notification from './Components/Notification'\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState(\"\")\r\n    const [newNumber, setNewNumber] = useState(\"\")\r\n    const [filter, setFilter] = useState(\"\")\r\n    const [filteredPersons, setFilteredPersons] = useState(null)\r\n    const [notification, setNotification] = useState(null)\r\n    \r\n  \r\n    useEffect(() => {\r\n        personService\r\n            .getAll()\r\n            .then(initialPerson => {\r\n                setPersons(initialPerson)\r\n            })\r\n\r\n    }, [])\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    const handleFilterChange = (event) => {\r\n        setFilter(event.target.value)\r\n\r\n        const filtered = persons.filter(person =>\r\n            // Check if the search term is exist in the names of phonebook\r\n            person.name.toLowerCase().includes(event.target.value.toLowerCase())\r\n        )\r\n\r\n        setFilteredPersons(filtered);\r\n    }\r\n\r\n   // Submit Form\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n        const newPerson = {\r\n            name: newName,\r\n            number: newNumber\r\n        }\r\n\r\n        // Check if person is already exist to the phonebook\r\n        const alreadyExists = persons.some(person => person.name === newName)\r\n\r\n        if (newName === \"\") {\r\n            return;\r\n        }\r\n\r\n        if (alreadyExists) {\r\n            const person = persons.find(p => p.name === newName)\r\n            const changedPerson = {...person, number: newNumber}\r\n            const {id} = person\r\n            \r\n            const confirmUpdate = window.confirm(\r\n                `${newName} is already added to phonebook, replact the old number with a new one?`\r\n            )\r\n           \r\n            if (confirmUpdate) {\r\n                personService\r\n                    .update(id, changedPerson)\r\n                    .then(returnedPerson => {\r\n                        setPersons(\r\n                            persons.map(person =>\r\n                                person.id !== id ? person : returnedPerson\r\n                                )\r\n                         ) \r\n                         setNotification({\r\n                             success: `Number updated for ${person.name}`\r\n                         })\r\n                         setTimeout(() => {\r\n                             setNotification(null)\r\n                         }, 5000)\r\n                    })\r\n                    \r\n            }\r\n            setNewName(\"\")\r\n            setNewNumber(\"\")\r\n            return\r\n        }\r\n\r\n        personService\r\n            .create(newPerson)\r\n            .then(returnedPerson => {\r\n                setPersons(persons.concat(returnedPerson))\r\n\r\n                setNotification({\r\n                    success: `Added ${returnedPerson.name}`\r\n                })\r\n                setTimeout(() => {\r\n                    setNotification(null)\r\n                }, 5000)\r\n                // clear input fields\r\n                setNewName('')\r\n                setNewNumber('')\r\n            })  \r\n            .catch(err => {\r\n                // console.log(err.response.data)\r\n                setNotification({\r\n                    error: `${err.response.data.error}`\r\n                })\r\n                setTimeout(() => {\r\n                    setNotification(null)\r\n                }, 5000)\r\n            })      \r\n    }\r\n    \r\n \r\n\r\n    const handleDelete = id => {\r\n        const person = persons.find(person => person.id === id)\r\n        const confirmDelete = window.confirm(`Delete ${person.name}?`)\r\n\r\n        if (confirmDelete) {\r\n            personService\r\n                .deletePerson(id)\r\n                .then(() => {\r\n                    const filteredPersons = persons.filter(person => person.id!== id) \r\n                    setPersons(filteredPersons)\r\n\r\n                    setFilter(\"\")})\r\n                .catch(error => {\r\n                    setNotification({\r\n                        error: `Information of ${person.name} has already been removed from server`\r\n                    })\r\n                    setTimeout(() => {\r\n                        setNotification({error: null})\r\n                    }, 5000)\r\n                    setPersons(persons.filter(p => p.id !== id))\r\n                })\r\n                \r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n        \r\n           <Notification\r\n                message={notification?.success || notification?.error} \r\n                className={notification?.success ? \"success\" : notification?.error ? \"error\" : null}\r\n            />\r\n    \r\n            <InputField label=\"Filter shown with:\" \r\n             value={filter} \r\n             onChange={handleFilterChange}\r\n            />\r\n\r\n            <h2>add a new</h2>\r\n            <PersonForm \r\n             onSubmit={addPerson}\r\n             newName={newName}\r\n             handleNameChange={handleNameChange}\r\n             newNumber={newNumber}\r\n             handleNumberChange={handleNumberChange}             \r\n            />\r\n\r\n            <h2>Numbers</h2>\r\n            <Persons\r\n             filter={filter}\r\n             persons={persons}\r\n             filteredPersons={filteredPersons}\r\n             handleDelete={handleDelete}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n    )"],"sourceRoot":""}